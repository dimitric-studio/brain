%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 24.0.3%%For: (Dimitric) ()%%Title: (winter_landscape__main.ai)%%CreationDate: 11/15/21 10:28 PM%%Canvassize: 16383%%BoundingBox: 51 124 1671 656%%HiResBoundingBox: 51.0786 124.786 1670.92 655.673%%DocumentProcessColors: Cyan Magenta%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%RGBProcessColor: 0 0 0 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 861.5 483.5 861.5 483.5%AI3_TileBox: 465 178 1257 790%AI3_DocumentPreview: None%AI5_ArtSize: 1722 968%AI5_RulerUnits: 2%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -957 1279 0.409864 1668 1001 18 0 0 6 43 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-98 -57%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%AI7_Thumbnail: 128 44 8%%BeginData: 6700 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD5FFFA9FFA9FD7AFFA9A9A9FFA9FFA9FD2AFFA9FD4FFFA9FFA9FD%2CFFA9A9FD4EFFA9FFA8FFA9FFA8FD2AFFA9FD4FFFA9FFAFFFAFFD2AFFA9%FFA9FD4EFFFD06A9FD11FFA9FD16FFA9FD51FFAFA9A9FD13FFA9FD17FFAF%FFFFA9FD07FFA9A9FD16FFA9FD2DFFA9FFA9FFA8FFA9FD0FFFA9AFA8FD16%FFA9FFFFFFA9FD07FFA9FD15FFAFFD26FFA9A9FD07FFA9AFA9FFA9FD0DFF%A9FFFFFFA9FD16FFA9FD04FFAFFFFFFFAFFFFFA9AFA9FD0DFFA9FD05FFAF%FFA9FD24FFAF7EA9FD06FFA9FFA9A9A9FFA9FD0BFFA9FFA9FFA9FFA9FD1A%FFA9FFFFFFA9FFFFAFFD04FFA9FD05FFA9FFFFFFA9FFA9FD05FFA9FFA9FD%23FFA9FFA9FD07FFA9FFA9FFAFFFFFFFA9FD08FFAFFFAFFFFFA9FFA9FFA9%FD12FFA8FD05FFA9FFA8FFA9FFA9FFA9FFA8FD05FFA9A9A8FFFFFFA8AFFD%04FFA9FD05FFA9FFA9FD05FFA8FD05FFA9A9A8FFFFFFA9A9FFAFA8FD05FF%A9FFA8FFA9A9FD06FFA9A9A8A9A9A9A8FFFFA9A9FFA9FD05FFA8FFA9FFA9%A9A9FFA9FFA9FFA9A9A9FD0CFFA9FD09FFA9FFA9FFA9FFFFFFA9FD05FFA9%FFFFFFA9FFA9FD07FFA9FFFFFFA9FFA9AFFD08FFA9AFA9FD05FFA9FFA9FF%A9FFFFFFA9FFA9A9A9AFFD04FFA9FD05FFA9FD05FFA9FFA9FD0DFFAFFD05%FFA9FD0DFFAFFD06FFA9AFA9FFA9A9A9FFA9A9A9FFA9FF85FFA9FFA9FFFF%FFA9FFA9FFFFFFA9A9A9FFA9FF84FD04A9FFFFAFA9AFFFFFA9FFA9FFA9FF%FFFFA9FFA9FD04FFAF85AFA9A9A9AFFD04FFA9AFFFFFA9FF7EAFAFFFA9FF%A9FFA9FFA9FD07FFA9FFA9FFFFFFA9AFA9FFA9FFA9FD0CFFAFFD09FFA9FF%A9FFFFFFA9FFA9FFA9A9A9FFA9AFA9FFA9FFA9FD05FFA9FFA9FFFFFFFD05%A9FFA9FFA9FFA9FFA9FFFFFFA9A9A9FFA9FFA9FFA9FFA9FFA9FFFFFFA9FD%09FFA9A9A9FFFFFFA9FFFFFFA9FFFFFFA9FFAFFFA9FFA9FFA9FFA9FFA9FF%AFFFA9FD08FFA9FFFFFFA8FD06FFA9A8FFFFFFA9AFFFFFA9FFFFFF7EFFA9%FFA8FFA9A9A8A9A9FFA8FFFFFFA8FFA9A9A9FFA9A984A9A9AFFD04FFA8FF%A9A9A8FFA9A97EA9A9AFA8A9A9A9A8FFA9FFA8A985A9A8FFFFFFA8A9A9FF%A8FF85A9A8FFA9FFA9FFA9FFA9FFFFA9A8FFA9FFFFA9A9FFA8AFA9AFA8FF%A9FFA8FD08FFA9FD11FFA9FD05FFA9FFA9FFFFFFA9FFFFAFA9FD0BFFA9A9%A9FD05FFA9FD0FFFA9FFA9FFFFFFA9FFA9FD05FFA9FD05FFA9FFA9FD05FF%A9FFFFFFA9FFA9FFFFFFAFFFA9FFAFFD0EFFA9FFA9FFA9FFA9FD05FFA9FF%FFAFA9FFA9A9A9FFA9A9A9AFA9AFA9A9A9FFA9FFA9A9A9FFA9A9A9FFFFFF%A9FFFFA984A9A9FFA9FFAFA9FD06FFA9FFA9FFA9FD05FFA9FFA9FFA9A9A9%FFAFFFFFA9A9FFFFFFA9FFA9FFA9FFFFAFA9AFA9A9A9FFA9FFA9FFA9FF7E%A9A9FD07FFA9AFA9FD0CFFA9FD17FFA9FFA9A9A9FD06FFAFA9FFFFFFA9FD%07FFA9FFFFFFA9FFFFFFA9FFFFFFA9AFA9FFA9FFA9FFA9FFA9A9A9FFA9FF%FFFFAFFFA9FFAFFFA9FFA9FFA9FFA9AFA9FFFFFFA9FFFFAFFFFFA9AFFD04%FFA9FFA9FFA9FFA9FD08FFA9FFA8FFA9A9A9FFFFFFA9FFA9AFFD14FFA8FF%A9FFA9FFFFFFA8FFFFFFA8FFA9FFFFFFA9FFA9FFA9FFA8A985AFA8AFA9FF%A9AFA9A9A8FFFFFFFD04A9A8FFA9FFFFAFA9FFA8AFA9A9A9AFA9A9A9AFA9%FFA8FFFFFFA8FFA9AFA8FD05FFA9FFA9FFFFFFA9FFA9AFA8FD04FFAFFD09%FFA9FFFFFFA9FD17FFAFFFA9FD09FFA9FD09FFA9FFA9AFA9FFFFFFA9FD0C%FFAFA9FFA9FFA9FFA9FFA9FFAFFFFFFFAFFFA9FFA9FFA9FFA9FD1AFFA9FF%A9FD04FFAFFD04FFA9FD19FFA9AFA9FD07FFA9AFFD05A9FFA9FFA9A9A9AF%A9FFA9A9A9FFA9FD05FFA9FFFFFFA9AFA9FFFFFFA9AFA9FFA9AFFFFFA9FF%A9FFA9FFA9A9A9FD18FFA9FFFFFFA9FD27FFA9FD05FFA9FFA9FFAFFD0FFF%A9FFA9FFA9FFA9FFFFFFA9FFA9FFA9FFA9FFFFFFA9FFA9FFA9FFA9FFAFFF%A9FD1AFFA9A9A9FFFFFFA8FFFFA9A8FD05FFA9FD1DFFA8AFA9FFA9FD07FF%A9FFA9FFA8FFFFFFA9FFA9FD07FFA9FF84A9A9A9A8FFA9FFA8FFFFFFA8FF%FFFFA9A9A9FFA8FD0FFFA8FD0EFFA9FFFFFFA9FD0FFFA9FD15FFAFFFA9FD%0BFFA9FD07FFA9FFA9FFA9FD0FFFA9FFAFFFA9FFFFFFA9FD0BFFA9FD07FF%A9FD12FFAFFD11FFA9FFA9FD05FFA9FFA9FFA9FFA9FFA9FFA9AFA9FD0EFF%AFFD06FFFD04A9FD04FFA9AFA9FFA9AFA9FFA9FFA9FD05FFA9FFA9FD0DFF%A9A9A9FFA9FFFFFFAFFFA9FD1EFFA9FD07FFA9FD05FFA9FFFFFFA9FFFFFF%A9FD09FFAFFD07FFAFFD09FFA9AFFD0AFFA9FFFFFFA9FFA9FD13FFA9FFFF%A9AFFD05FFA9FD0CFFA8FFFFFFA8FD07FFA9FD05FFA9FD07FFA9AFA8FD12%FFA9A8A9A9FD07FFA9A9A8AFFD04FFA9A9FD24FFA8FFA9FFA8FFFFFFA8A9%A9A9FD17FFA9FD11FFAFFFAFFD0FFFA9FFA9AFFD10FFA9FD23FFA9FFFFFF%A9FFA9FD05FFA9FD0CFFA9FD09FFA9FD07FFA9FD0DFFA9FD0DFFFD05A9FD%0BFFA9FD1CFFAFA9FFFFFFA9FFA9FFFFFFA9A9A9FFA9A9A9FFFFFFA9FFFF%FFA9FD0AFFA9FD05FFA9FFA9FFA9FD17FFA9FFA9FD0CFFA985FD05FFA9FF%A9FFA9FFA9FD1FFF85FFA9A9A9FD05FFA9FFFFFFA9FFA9FFAFFFFFFFA9FD%0AFFA9FD05FFA9FD0DFFA9FD11FFA9A9A8FD09FFA9FFFFAFA9FFA9FFFFFF%A9FD13FFA8AFFD0DFFA9A8A9A9FD05FFA8FFFFFFA8AFA9FFA8FFFFFFA9FF%A9FFA8A9A9FD1AFFA9FD13FFA9FFAFFD09FFA9FD1BFFA9FD15FFA9FD05FF%A9FFFFFFA9FFA9FFFFFFA9FFA9FD06FFA9FD05FFA9FD0DFFA9FD17FFA9FF%A9FFA9FD05FFA9AFA9FD17FFA9FFA9FFA9FD07FFA9FFFFFFA9A9A9FD04FF%A9A9FFA9FFA9A9FFFFA9FFFFFFA9FFA9FFA9FFA9FD0CFFA9FD27FFA9FFA9%FD07FFA9FD15FFA9FD05FFA9FFFFFFA9FFA9FFA9FFFFFFA9FFA9FD05FFA9%FFA9FFA9FFAFFFA9FFFFFFA9FFFFFFA9FD06FFA9FD07FFA9FD05FFA9FFA9%FFFFFFA9FD1DFFA9FFA9AFA8FFA9A9A8FFA9FFA8FFA9FFA8FFA9AFA8FFA9%FFA9FFFFFFA9FFA9A9A8FFA9A9A9FFAFA9FD04FFA8FFA9FFFFFFA9FFA8FF%A9FFFFFFA9FFFFFFA9FD05FFA8FFA9FFA8FD0EFFA9FFFFFFA9FD05FFA9FD%31FFAFFD05FFA9FFA9FFA9AFA9FFFFFFA9FFFFFFA9FFA9FFAFFFA9FFAFFF%A9FFA9FFA9AFFD08FFA9FFA9FD07FFA9FD04FFA9FD09FFA9FFFFFFAFFFA9%AFA9FD3BFFA9FFA9A9A9FFA9FFA9FFFFFFA9FFA9A9A9AFFFA9A9FFFFAFA9%FFA9FFFFFFA9FFA9FFFFAFA9FFFFFFA9FFA9FFA9FD06FFA9FFA9FD05FFA9%FFFFFFA9FD0DFFA9FD37FFA9FFA9FD09FFA9FFA9FFFFFFA9FD07FFA9AFA9%FFFFFFAFFFA9FFA9FFFFAFFD04FFA9FFFFFFA9A8FFFFFFA9FD07FFA8FFA9%FFA8FFA9A9A8FFA9FFA8FFA9A9A8FFA9FD33FFA9AFA8FF85FFA8FFFFFFA8%FF85FFA9A9FFFFA9AFAFFFA9AFA9A9A9FFA9FFA8FFFFAFFFFFA9FFA8FFA9%FD0EFFA9FFA9FD4BFFA9FFA9FD04FFA9FFFFA9FD05FFA9FFFFFFA9FFFFFF%A9FFFFFFA9FFAFFD0AFFA9FD05FFA9AFA9FFA9FD4FFFA9FFA9FFA9AFA9A9%A9FFA9A9FFA9A9FFA9FFA9FFA9AFA9FFA9FD12FFA9FD5DFFAFFFA9FFA9FF%A9FFAFFD16FFA9AFA9FD76FFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade false putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Vectorized Object) (Image Tracing) (Vectorize.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Deform.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (PlanetX.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Perspective Plugin Group) (Adobe Perspective Plugin Group) (Perspective.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtOnPathBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligraphicBrushTool.aip)%AI8_PluginGroupInfo(Adobe Pattern Editor Plugin Group) (Adobe Pattern Editor Plugin Group) (SwatchLibs.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathfinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ Touch Calligraphic Brush/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(Touch Calligraphic Brush)(1 0 24 100 100 0 0 2 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb0.911711 0.786862 0.619532 0.974487 ([Registration]) 0 Xs([Registration])PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 Au1 D0 R0.939116 0.764523 0 0 0 0 0.941176 XA1 J 1 j 2 w 4 M []0 d0 XR334.256 360.446 m427.738 340.53 598.449 215.622 848.928 220.041 C854.623 220.139 860.193 221.134 865.7 221.609 C1057.11 238.173 1149.33 160.374 1319.64 151.483 C1423.11 146.105 1481.34 138.263 1662.61 187.855 C1669.92 189.872 LS0 D285.323 440.082 m413.298 448.148 538.017 438.997 673.141 379.591 CS1 D1363.9 388.213 m1292.66 366.209 1238.64 346.625 1144.61 362.624 C1114.01 367.831 868.444 425.687 680.612 370.018 C627.418 354.252 599.749 343.353 544.287 342.376 C511.216 341.848 478.152 343.754 445.361 348.077 CS1588.84 470.735 m1512.26 464.192 1455.21 419.153 1377.25 392.542 CS599.373 443.873 m566.905 447.118 534.117 444.402 502.627 435.86 CS759.205 392.578 m726.541 408.711 697.15 420.641 670.297 428.985 CS0 D1115.47 373.756 m1105.17 372.617 1103.87 387.2 1110.6 389.396 C1108.6801 394.236 1109.79 402.016 1114.85 403.369 C1114.24 408.926 1115.47 412.135 1119.53 413.919 C1119.34 418.929 1120.04 422.962 1121.76 423.034 C1123.47 423.106 1124.33 419.691 1124.28 417.253 C1127.0699 415.64 1129.11 410.844 1128.25 407.08 C1134.4301 404.947 1135.35 395.598 1132.14 390.785 C1139.0601 386.833 1138.65 374.652 1129.13 373.89 CS1122.13 398.431 m1122.13 377.914 L1117.08 385.847 LS1 D1575.76 475.835 m1587.9399 474.481 1589.48 491.753 1581.52 494.334 C1583.79 500.071 1582.48 509.267 1576.49 510.871 C1577.22 517.441 1575.76 521.241 1570.96 523.347 C1571.1899 529.272 1570.36 534.103 1568.3199 534.103 c1566.28 534.103 1565.28 530.15 1565.34 527.264 C1562.04 525.364 1559.62 519.691 1560.63 515.236 C1553.33 512.708 1552.24 501.648 1556.03 495.957 C1547.85 491.287 1548.34 476.821 1559.62 475.969 CS1567.87 505.045 m1567.87 480.764 L1573.85 490.148 LS0 D890.687 386.913 m890.687 375.718 881.556 367.688 870.408 366.639 C868.336 366.451 835.627 366.639 YS824.775 366.585 m819.395 366.585 814.234 364.449 810.43 360.647 C806.625 356.845 804.488 351.688 804.488 346.311 c804.488 340.934 806.625 335.777 810.43 331.975 C814.234 328.173 819.395 326.037 824.775 326.037 C842.318 326.037 L845.018 326.094 847.701 325.611 850.212 324.618 C852.722 323.625 855.009 322.141 856.938 320.253 C858.868 318.365 860.4 316.112 861.447 313.624 C862.493 311.137 863.032 308.466 863.032 305.767 c863.032 303.069 862.493 300.398 861.447 297.91 C860.4 295.423 858.868 293.169 856.938 291.281 C855.009 289.393 852.722 287.909 850.212 286.916 C847.701 285.923 845.018 285.441 842.318 285.498 C756.711 285.498 LS1 D745.841 285.192 m740.536 285.081 735.485 282.896 731.772 279.107 C728.06 275.318 725.98 270.226 725.98 264.923 c725.98 259.619 728.06 254.527 731.772 250.738 C735.485 246.949 740.536 244.764 745.841 244.653 C763.384 244.653 L767.904 244.654 772.294 243.146 775.859 240.37 C779.424 237.593 781.959 233.706 783.062 229.326 CS0 D106.199 370.547 m106.2 368.829 105.725 367.145 104.825 365.681 C103.926 364.216 102.639 363.03 101.106 362.253 C99.5729 361.476 97.8544 361.138 96.1412 361.278 c94.428 361.418 92.787 362.03 91.4006 363.045 C88.2436 365.357 87.3018 369.687 88.5575 373.397 C119.284 464.533 L147.733 382.118 LS1 D94.1001 353.033 m54.5838 242.179 L47.2743 221.681 56.3776 198.216 76.4496 189.719 C81.7808 187.463 87.5125 186.304 93.3019 186.313 C105.177 187.102 L105.177 141.391 LS0 D177.716 198.924 m174.397 194.559 169.994 191.135 164.944 188.993 C160.634 187.17 156.001 186.234 151.321 186.242 CS1332.3101 470.233 m1332.3101 468.039 1331.4399 465.935 1329.88 464.383 C1328.33 462.832 1326.23 461.96 1324.03 461.96 CS1319.36 477.305 m1336.88 527.918 L1349.9301 490.606 LS1340.72 445.764 m1340.2 445.763 1339.6899 445.864 1339.2 446.062 C1338.72 446.26 1338.29 446.551 1337.92 446.919 C1337.55 447.286 1337.26 447.722 1337.0601 448.202 C1336.86 448.682 1336.76 449.197 1336.76 449.717 CS1342.3199 484.798 m1341.3199 484.8 1340.36 485.199 1339.65 485.906 C1338.95 486.614 1338.55 487.572 1338.55 488.571 CS1338.08 435.726 m1336.03 435.726 1334.05 436.542 1332.6 437.996 C1331.14 439.45 1330.33 441.422 1330.33 443.479 CS1 D1248.74 430.536 m1244.27 443.774 L1239.45 429.801 LS0 D1242.52 419.906 m1241.96 419.905 1241.4 420.015 1240.88 420.23 C1240.35 420.446 1239.88 420.762 1239.48 421.161 c1239.08 421.56 1238.77 422.033 1238.55 422.555 C1238.33 423.076 1238.22 423.635 1238.23 424.199 CS1 D1187.52 490.893 m1181.41 509.007 L1173.91 487.281 LS0 D1179.01 476.346 m1178.24 476.342 1177.47 476.491 1176.76 476.784 C1176.04 477.077 1175.39 477.508 1174.85 478.053 C1174.3 478.597 1173.86 479.244 1173.5601 479.957 C1173.27 480.67 1173.11 481.435 1173.11 482.208 CS1 D1183.59 465.357 m1184.49 465.454 1185.36 465.728 1186.15 466.161 C1186.9399 466.595 1187.64 467.181 1188.21 467.885 C1188.78 468.589 1189.2 469.398 1189.45 470.266 C1189.71 471.133 1189.79 472.042 1189.6899 472.94 CS0 D874.175 496.746 m883.503 523.778 L895.727 483.615 LS1 D864.426 486.277 m864.426 485.563 864.709 484.88 865.214 484.375 C865.719 483.871 866.403 483.588 867.117 483.588 C867.541 483.579 867.96 483.676 868.338 483.869 C868.716 484.062 869.039 484.346 869.28 484.695 C869.521 485.044 869.672 485.448 869.718 485.869 C869.765 486.291 869.706 486.717 869.547 487.11 C860.578 513.596 L848.919 479.85 L848.711 479.34 848.632 478.786 848.689 478.238 C848.746 477.69 848.939 477.164 849.248 476.708 C849.558 476.252 849.976 475.88 850.465 475.624 C850.953 475.369 851.498 475.238 852.049 475.243 C852.982 475.243 853.876 475.613 854.535 476.272 C855.195 476.931 855.565 477.825 855.565 478.757 CS0 D827.923 473.46 m835.466 495.249 L841.089 479.187 LS1317.5699 421.376 m1317.5699 420.29 1317.36 419.214 1316.9399 418.21 C1316.53 417.206 1315.92 416.294 1315.15 415.526 c1314.38 414.758 1313.47 414.149 1312.46 413.733 C1311.46 413.317 1310.38 413.103 1309.29 413.103 CS1 D1309.91 397.059 m1309.77 395.982 1309.84 394.888 1310.12 393.839 C1310.4 392.789 1310.89 391.805 1311.55 390.944 C1312.21 390.082 1313.03 389.359 1313.98 388.817 C1314.92 388.274 1315.96 387.923 1317.03 387.782 CS0 D1315.1 436.299 m1315.1 435.586 1314.8101 434.902 1314.3101 434.398 C1313.8 433.894 1313.12 433.61 1312.41 433.61 C1311.98 433.606 1311.5601 433.705 1311.1899 433.9 C1310.8101 434.095 1310.49 434.38 1310.25 434.729 c1310.01 435.078 1309.86 435.48 1309.8101 435.901 C1309.76 436.322 1309.8199 436.748 1309.98 437.142 C1318.9399 451.052 L1330.6 429.882 L1330.8101 429.371 1330.89 428.818 1330.83 428.269 C1330.78 427.721 1330.58 427.196 1330.27 426.74 C1329.96 426.284 1329.55 425.911 1329.0601 425.656 C1328.5699 425.4 1328.03 425.269 1327.47 425.275 C1327.01 425.274 1326.5601 425.363 1326.13 425.539 c1325.7 425.715 1325.3101 425.972 1324.99 426.298 C1324.66 426.624 1324.4 427.01 1324.23 427.436 C1324.05 427.862 1323.96 428.318 1323.96 428.779 CS1 D1311.5 428.134 m1300.96 410.907 L1299.91 409.234 1299.53 407.225 1299.9 405.283 C1300.27 403.342 1301.37 401.614 1302.96 400.447 C1303.85 399.829 1304.86 399.399 1305.92 399.183 CS0 D1327.71 419.906 m1333.59 411.301 L1336.51 407.017 1334.83 400.913 1329.95 399.166 C1329.71 399.077 1329.47 399.003 1329.22 398.941 C1327.1 398.391 1324.85 398.705 1322.96 399.814 C1321.0699 400.923 1319.6899 402.737 1319.14 404.857 CS1414.58 451.25 m1414.58 448.917 1413.65 446.679 1412 445.029 C1410.35 443.379 1408.11 442.45 1405.78 442.448 CS1 D1406.4301 425.4 m1406.13 423.089 1406.75 420.753 1408.1801 418.905 C1409.6 417.057 1411.6899 415.847 1414 415.541 CS0 D1411.95 467.123 m1411.97 466.704 1411.89 466.287 1411.73 465.902 C1411.5601 465.517 1411.3101 465.173 1411 464.896 C1410.6801 464.618 1410.3101 464.414 1409.91 464.298 c1409.51 464.182 1409.08 464.157 1408.67 464.225 c1408.26 464.293 1407.86 464.452 1407.52 464.691 C1407.17 464.929 1406.89 465.241 1406.6801 465.605 C1406.47 465.968 1406.34 466.373 1406.3101 466.791 C1406.28 467.208 1406.34 467.628 1406.49 468.019 C1416 482.817 L1428.39 460.284 L1428.71 459.421 1428.7 458.469 1428.35 457.617 C1428 456.764 1427.35 456.072 1426.52 455.677 C1425.95 455.438 1425.33 455.342 1424.71 455.4 C1424.1 455.457 1423.51 455.666 1423 456.006 C1422.48 456.347 1422.0601 456.81 1421.77 457.353 c1421.48 457.896 1421.3199 458.502 1421.3199 459.119 CS1 D1408.35 458.823 m1396.91 440.082 L1395.79 438.302 1395.38 436.163 1395.78 434.097 C1396.17 432.031 1397.34 430.192 1399.04 428.95 C1399.98 428.295 1401.05 427.835 1402.1801 427.596 CS0 D1425.34 449.717 m1431.62 440.521 L1434.73 435.968 1432.9399 429.469 1427.74 427.605 C1427.49 427.514 1427.23 427.436 1426.97 427.372 C1425.85 427.076 1424.6899 427.004 1423.54 427.159 C1422.39 427.314 1421.29 427.694 1420.29 428.277 c1419.29 428.86 1418.41 429.634 1417.71 430.556 C1417.01 431.477 1416.5 432.527 1416.21 433.646 CS1182.6899 398.789 m1180.51 399.026 1178.51 400.119 1177.13 401.828 C1175.76 403.538 1175.12 405.723 1175.35 407.904 CS1 D1175.34 451.734 m1175.33 451.232 1175.47 450.739 1175.73 450.31 C1175.99 449.882 1176.36 449.534 1176.8101 449.308 C1177.26 449.081 1177.76 448.984 1178.26 449.028 c1178.76 449.072 1179.24 449.255 1179.64 449.556 C1180.08 449.909 1180.39 450.39 1180.54 450.929 C1180.6801 451.469 1180.66 452.042 1180.47 452.567 C1171.5 466.469 L1159.84 445.298 L1159.54 444.483 1159.5601 443.586 1159.89 442.784 c1160.22 441.982 1160.84 441.334 1161.63 440.969 C1162.17 440.742 1162.75 440.651 1163.33 440.704 C1163.9 440.758 1164.46 440.953 1164.9399 441.274 C1165.4301 441.595 1165.8199 442.03 1166.1 442.542 C1166.37 443.053 1166.51 443.625 1166.51 444.205 CS0 D1179 444.205 m1195.35 417.468 L1198.65 412.09 1197.45 404.857 1192.25 401.245 C1190.87 400.286 1189.3101 399.615 1187.66 399.273 CS1 D1158.76 410.504 m1149.09 394.424 L1145.97 389.513 1146.96 382.853 1151.6801 379.456 C1153.5 378.207 1155.66 377.555 1157.87 377.592 C1165.52 377.592 LS0 D1192.84 396.692 m1196.4301 391.054 1195.29 383.418 1189.87 379.519 C1187.79 378.091 1185.3101 377.346 1182.78 377.386 C1174.01 377.386 LS1 D1163.35 436.272 m1156.85 426.754 L1153.9301 422.469 1155.61 416.366 1160.49 414.618 C1160.73 414.537 1160.97 414.457 1161.21 414.394 C1162.26 414.121 1163.36 414.058 1164.4301 414.209 C1165.51 414.359 1166.54 414.719 1167.48 415.27 C1168.42 415.82 1169.23 416.549 1169.89 417.415 C1170.54 418.281 1171.02 419.268 1171.29 420.318 CS0 D1193.77 460.948 m1200.78 481.195 L1206.4 465.124 LS1196.83 451.733 m1196.3101 451.732 1195.79 451.834 1195.3101 452.032 C1194.83 452.23 1194.39 452.521 1194.03 452.888 C1193.66 453.256 1193.37 453.692 1193.17 454.172 C1192.97 454.652 1192.87 455.167 1192.87 455.686 CS1 D1174.01 435.6 m1173.72 433.425 1174.3101 431.225 1175.65 429.483 C1176.98 427.742 1178.95 426.602 1181.13 426.314 CS0 D1173.91 383.848 m1173.91 363.798 LS1 D785.779 425.087 m788.599 425.396 791.181 426.81 792.959 429.02 C794.736 431.23 795.563 434.054 795.259 436.873 CS0 D783.806 482.037 m783.806 481.392 783.627 480.759 783.289 480.209 C782.952 479.659 782.468 479.213 781.892 478.92 C781.317 478.628 780.671 478.501 780.027 478.552 C779.384 478.604 778.767 478.833 778.245 479.214 C777.682 479.668 777.275 480.289 777.084 480.987 C776.892 481.685 776.925 482.425 777.178 483.104 C792.757 514.151 L807.824 486.778 L808.212 485.728 808.193 484.57 807.769 483.534 C807.346 482.497 806.55 481.656 805.537 481.177 C804.968 480.942 804.359 480.824 803.743 480.827 C803.147 480.826 802.556 480.942 802.005 481.17 C801.454 481.397 800.953 481.731 800.532 482.153 C800.11 482.574 799.776 483.075 799.548 483.625 C799.321 484.176 799.204 484.766 799.205 485.362 CS1 D789.627 480.935 m770.048 448.91 L765.779 441.937 767.357 432.606 774.048 427.937 C775.835 426.697 777.855 425.831 779.985 425.391 CS0 D809.313 441.775 m821.816 420.99 L825.852 414.636 824.578 406.031 818.47 401.63 C818.416 401.63 L816.067 400.02 813.274 399.18 810.425 399.228 C801.205 399.228 LS1 D767.77 426.323 m763.133 419.036 764.604 409.159 771.608 404.122 C771.662 404.122 L774.361 402.275 777.567 401.314 780.837 401.37 C792.192 401.37 LS0 D802.999 475.62 m811.753 462.776 L815.528 457.246 813.358 449.331 807.035 447.091 C806.739 446.974 806.425 446.884 806.138 446.795 C804.779 446.438 803.363 446.352 801.97 446.542 C800.578 446.733 799.237 447.195 798.024 447.903 C796.81 448.612 795.748 449.552 794.898 450.671 C794.049 451.789 793.427 453.064 793.071 454.422 CS800.524 408.335 m800.524 391.834 LS1 D469.747 468.109 m470.81 468.22 471.84 468.541 472.777 469.053 C473.715 469.565 474.541 470.258 475.209 471.092 C475.876 471.926 476.371 472.884 476.665 473.91 C476.959 474.937 477.047 476.011 476.922 477.072 CS0 D468.456 508.783 m468.468 508.401 468.395 508.021 468.243 507.671 C468.09 507.32 467.862 507.008 467.575 506.755 C467.288 506.503 466.948 506.318 466.581 506.212 C466.213 506.107 465.827 506.084 465.449 506.145 C465.072 506.207 464.713 506.351 464.398 506.567 C464.082 506.783 463.819 507.067 463.626 507.397 C463.434 507.727 463.316 508.095 463.283 508.476 C463.25 508.857 463.301 509.24 463.433 509.599 C475.236 533.108 L486.644 512.377 L486.845 511.879 486.92 511.339 486.862 510.805 c486.804 510.271 486.614 509.759 486.311 509.316 C486.007 508.873 485.599 508.511 485.122 508.263 c484.645 508.015 484.115 507.889 483.577 507.896 C483.126 507.896 482.679 507.984 482.263 508.157 C481.846 508.329 481.467 508.582 481.148 508.901 c480.829 509.22 480.576 509.598 480.404 510.015 C480.231 510.431 480.142 510.878 480.142 511.328 CS1 D472.097 505.511 m458.832 483.812 L457.395 481.544 456.873 478.816 457.372 476.178 C457.872 473.541 459.356 471.191 461.523 469.606 C462.733 468.766 464.099 468.178 465.541 467.876 CS0 D487.783 478.291 m497.254 462.543 L498.765 460.231 499.344 457.433 498.873 454.712 C498.402 451.991 496.917 449.55 494.716 447.879 C492.931 446.667 490.812 446.041 488.653 446.087 C481.156 446.087 LS1 D456.312 466.585 m452.805 461.064 453.908 453.589 459.218 449.761 C459.263 449.761 L461.306 448.36 463.736 447.63 466.214 447.673 C474.815 447.673 LS0 D483.783 502.742 m489.622 494.2 L492.492 490.005 490.842 484.027 486.034 482.315 C485.806 482.226 485.573 482.151 485.335 482.091 C484.306 481.822 483.234 481.758 482.18 481.904 C481.127 482.05 480.113 482.402 479.196 482.941 C478.279 483.48 477.478 484.195 476.838 485.044 C476.199 485.893 475.734 486.861 475.469 487.89 CS481.12 452.961 m481.12 434.507 LS1 D1453.6801 472.071 m1454.96 472.208 1456.1899 472.595 1457.3101 473.211 C1458.4399 473.826 1459.4301 474.657 1460.23 475.657 C1461.03 476.656 1461.63 477.804 1461.99 479.034 C1462.34 480.265 1462.45 481.553 1462.3101 482.826 CS0 D1452.34 526.045 m1452.36 525.548 1452.27 525.051 1452.08 524.593 C1451.88 524.134 1451.59 523.724 1451.22 523.393 C1450.84 523.062 1450.4 522.818 1449.92 522.679 C1449.45 522.54 1448.9399 522.509 1448.45 522.588 C1447.96 522.668 1447.49 522.856 1447.08 523.139 C1446.67 523.422 1446.33 523.792 1446.08 524.224 C1445.83 524.655 1445.6801 525.137 1445.64 525.633 C1445.6 526.13 1445.67 526.629 1445.85 527.094 C1461.1 557.442 L1475.83 530.688 L1476.2 529.661 1476.1801 528.529 1475.76 527.517 C1475.34 526.506 1474.5601 525.689 1473.5699 525.23 C1472.89 524.946 1472.16 524.833 1471.4301 524.902 C1470.7 524.97 1470 525.218 1469.39 525.622 C1468.78 526.027 1468.28 526.576 1467.9301 527.22 C1467.59 527.865 1467.4 528.585 1467.4 529.317 CS1 D1457.2 522.63 m1439.38 493.492 L1436.6899 487.137 1438.11 478.649 1444.23 474.401 C1445.85 473.277 1447.6801 472.488 1449.61 472.079 CS0 D1477.27 486.689 m1489.49 466.361 L1493.4399 460.15 1492.1801 451.733 1486.22 447.44 C1483.92 445.866 1481.1899 445.046 1478.4 445.092 C1468.72 445.092 LS1 D1439.0699 469.157 m1434.59 461.987 1435.98 452.387 1442.83 447.449 C1442.88 447.449 L1445.52 445.641 1448.66 444.701 1451.85 444.76 C1462.96 444.76 LS0 D1470.35 519.628 m1479.65 506.013 L1483.35 500.635 1481.22 492.882 1475.05 490.669 C1474.75 490.561 1474.4399 490.471 1474.15 490.391 C1472.8199 490.044 1471.4399 489.962 1470.08 490.15 C1468.72 490.339 1467.41 490.793 1466.23 491.487 C1465.04 492.181 1464.01 493.102 1463.1801 494.197 C1462.35 495.291 1461.75 496.538 1461.4 497.866 CS1468.6801 453.992 m1468.6801 432.311 LS1273.01 446.571 m1273.01 445.484 1272.79 444.409 1272.38 443.405 C1271.96 442.401 1271.35 441.489 1270.58 440.721 C1269.8101 439.953 1268.9 439.343 1267.9 438.928 C1266.89 438.512 1265.8199 438.298 1264.73 438.298 CS1 D1258.91 419.467 m1249.9399 394.523 L1246.72 385.56 1252.53 375.494 1262.02 374.634 C1262.48 374.634 1262.92 374.571 1263.4 374.571 CS0 D1266.76 386.402 m1265.24 386.566 1263.76 387.03 1262.41 387.766 C1261.0699 388.502 1259.88 389.496 1258.92 390.692 C1257.96 391.888 1257.24 393.261 1256.8199 394.734 C1256.39 396.206 1256.25 397.749 1256.42 399.273 CS1 D1265.35 422.281 m1265.0601 420.106 1265.65 417.906 1266.98 416.165 C1268.3199 414.423 1270.29 413.283 1272.47 412.996 CS0 D1270.53 461.485 m1270.53 460.772 1270.25 460.088 1269.74 459.584 C1269.24 459.079 1268.55 458.796 1267.84 458.796 C1267.42 458.789 1267 458.887 1266.62 459.082 C1266.24 459.276 1265.92 459.561 1265.6801 459.91 C1265.4399 460.26 1265.29 460.663 1265.24 461.085 c1265.1899 461.507 1265.25 461.934 1265.41 462.327 C1274.38 476.229 L1286.04 455.058 L1286.25 454.548 1286.33 453.994 1286.27 453.446 C1286.21 452.898 1286.02 452.372 1285.71 451.917 C1285.4 451.461 1284.98 451.088 1284.49 450.833 C1284 450.577 1283.46 450.446 1282.91 450.451 C1281.98 450.454 1281.08 450.825 1280.42 451.483 C1279.77 452.142 1279.39 453.034 1279.39 453.965 CS1 D1266.33 453.006 m1256.4 436.102 L1255.34 434.43 1254.96 432.42 1255.33 430.478 C1255.7 428.536 1256.8 426.808 1258.4 425.642 C1259.29 425.025 1260.29 424.592 1261.36 424.37 CS0 D1287.25 418.346 m1295.67 391.717 L1296.5601 389.03 1296.4 386.106 1295.21 383.534 C1294.03 380.963 1291.91 378.935 1289.29 377.86 C1287.84 377.307 1286.3 377.054 1284.75 377.117 C1279.37 377.117 LS1283.47 444.617 m1289.02 436.487 L1291.95 432.203 1290.26 426.099 1285.38 424.351 C1285.15 424.271 1284.91 424.19 1284.66 424.127 C1283.61 423.855 1282.51 423.792 1281.4399 423.942 C1280.36 424.092 1279.3199 424.453 1278.39 425.003 C1277.45 425.553 1276.63 426.282 1275.98 427.148 C1275.33 428.015 1274.85 429.001 1274.58 430.052 CS1279.35 386.169 m1279.35 368.566 LS1 D1223.9 426.933 m1223.9 426.22 1224.1899 425.536 1224.6899 425.032 C1225.2 424.527 1225.88 424.244 1226.59 424.244 C1227.02 424.236 1227.4399 424.334 1227.8199 424.528 C1228.1899 424.723 1228.52 425.008 1228.76 425.358 C1229 425.708 1229.15 426.112 1229.1899 426.534 C1229.24 426.956 1229.1801 427.383 1229.01 427.775 C1220.05 454.252 L1208.39 420.506 L1208.09 419.692 1208.11 418.794 1208.4399 417.992 C1208.77 417.19 1209.39 416.543 1210.1801 416.177 C1210.71 415.95 1211.3 415.86 1211.87 415.913 C1212.45 415.966 1213.01 416.162 1213.49 416.482 C1213.98 416.803 1214.37 417.239 1214.65 417.75 C1214.92 418.262 1215.0601 418.833 1215.0601 419.413 CS0 D1228.33 419.467 m1238.91 389.665 L1241.03 383.713 1238.38 376.893 1232.5601 374.428 C1231.01 373.771 1229.34 373.432 1227.65 373.433 CS1 D1209.21 410.271 m1205.52 399.99 L1203.72 395.114 1206.92 389.629 1212.1 389.163 C1212.35 389.149 1212.6 389.149 1212.85 389.163 C1215.05 389.163 1217.15 390.033 1218.7 391.583 C1220.25 393.133 1221.12 395.235 1221.12 397.427 CS1215.03 405.708 m1216.11 405.826 1217.16 406.154 1218.11 406.676 C1219.0699 407.198 1219.91 407.902 1220.59 408.748 C1221.27 409.595 1221.77 410.567 1222.08 411.61 C1222.38 412.652 1222.48 413.744 1222.36 414.824 CS0 D1227.2 380.182 m1227.2 368.208 LS1 D1616.8199 493.689 m1616.8199 492.976 1617.11 492.292 1617.61 491.788 C1618.12 491.284 1618.8 491 1619.51 491 C1619.9399 490.993 1620.36 491.091 1620.73 491.285 C1621.11 491.479 1621.4301 491.763 1621.67 492.112 c1621.91 492.461 1622.0601 492.863 1622.11 493.284 C1622.15 493.705 1622.09 494.13 1621.9399 494.523 C1612.97 521.008 L1601.3101 487.263 L1601.1 486.752 1601.02 486.199 1601.08 485.65 C1601.14 485.102 1601.33 484.577 1601.64 484.121 C1601.95 483.665 1602.36 483.292 1602.85 483.037 C1603.34 482.781 1603.89 482.65 1604.4399 482.656 C1605.37 482.656 1606.26 483.026 1606.92 483.685 C1607.58 484.344 1607.95 485.237 1607.95 486.169 CS0 D1622.11 483.642 m1631.8199 456.385 L1633.9399 450.434 1631.29 443.613 1625.47 441.148 C1623.92 440.495 1622.25 440.16 1620.5699 440.162 CS1 D1601.76 475.996 m1598.4301 466.746 L1596.63 461.87 1599.85 456.385 1605.01 455.919 C1605.26 455.905 1605.51 455.905 1605.76 455.919 C1607.96 455.919 1610.0601 456.79 1611.61 458.34 C1613.16 459.889 1614.03 461.991 1614.03 464.183 CS0 D1607.62 442.098 m1605.0601 442.098 1602.61 443.112 1600.79 444.918 C1598.98 446.724 1597.95 449.175 1597.9399 451.733 CS1 D1607.9399 472.465 m1609.03 472.581 1610.0699 472.909 1611.03 473.43 C1611.98 473.951 1612.8199 474.656 1613.5 475.503 C1614.1801 476.349 1614.6899 477.322 1614.99 478.365 C1615.3 479.408 1615.39 480.5 1615.27 481.58 CS0 D1620.12 446.938 m1620.12 433.368 LS1 D959.881 493.106 m959.881 492.393 960.164 491.709 960.669 491.205 C961.173 490.701 961.858 490.418 962.571 490.418 C962.995 490.413 963.413 490.512 963.789 490.707 C964.166 490.902 964.488 491.187 964.728 491.536 C964.968 491.885 965.119 492.288 965.167 492.708 C965.214 493.129 965.158 493.555 965.002 493.949 C956.033 520.435 L944.409 486.689 L944.201 486.179 944.122 485.625 944.179 485.077 C944.237 484.529 944.429 484.003 944.739 483.547 c945.049 483.091 945.466 482.719 945.955 482.463 C946.444 482.208 946.988 482.077 947.539 482.082 C948.47 482.082 949.363 482.451 950.022 483.108 C950.681 483.765 951.053 484.656 951.055 485.587 CS0 D1002.54 499.004 m1014.95 471.954 L1015.19 471.342 1015.3 470.69 1015.28 470.034 C1015.26 469.379 1015.11 468.734 1014.84 468.136 C1014.57 467.539 1014.18 467.001 1013.7 466.555 C1013.22 466.108 1012.66 465.762 1012.04 465.536 C1011.32 465.26 1010.56 465.12 1009.79 465.124 C1006.6 465.124 1004.02 467.454 1004.02 470.331 CS1 D986.222 506.631 m974.562 480.809 L974.327 480.199 974.215 479.549 974.234 478.895 C974.252 478.242 974.401 477.599 974.67 477.003 C974.94 476.408 975.325 475.872 975.804 475.426 C976.283 474.981 976.845 474.636 977.459 474.41 C978.175 474.135 978.935 473.995 979.701 473.997 C982.885 473.997 985.468 476.319 985.468 479.187 CS0 D988.957 514.474 m988.957 513.761 988.674 513.077 988.169 512.573 c987.664 512.069 986.98 511.785 986.266 511.785 C985.842 511.777 985.423 511.873 985.045 512.067 C984.667 512.26 984.344 512.544 984.103 512.893 C983.862 513.242 983.712 513.645 983.665 514.067 C983.618 514.488 983.677 514.915 983.836 515.308 C992.805 529.218 L1004.46 508.048 L1004.67 507.537 1004.75 506.984 1004.69 506.435 C1004.64 505.887 1004.44 505.362 1004.13 504.906 c1003.82 504.45 1003.41 504.077 1002.92 503.822 C1002.43 503.566 1001.89 503.435 1001.33 503.441 C1000.87 503.44 1000.41 503.53 999.987 503.706 C999.56 503.882 999.172 504.141 998.845 504.467 C998.519 504.794 998.26 505.182 998.083 505.608 C997.907 506.035 997.817 506.493 997.818 506.954 CS1 D1371.97 490.821 m1371.9301 490.411 1371.98 489.996 1372.12 489.61 C1372.27 489.223 1372.5 488.875 1372.8 488.592 C1373.1 488.31 1373.46 488.1 1373.86 487.979 C1374.25 487.858 1374.67 487.83 1375.08 487.896 C1375.48 487.962 1375.87 488.121 1376.21 488.361 C1376.54 488.6 1376.8199 488.914 1377.01 489.277 C1377.21 489.641 1377.3199 490.044 1377.33 490.456 C1377.35 490.868 1377.27 491.278 1377.1 491.655 C1368.13 518.14 L1356.47 484.395 L1356.26 483.884 1356.1801 483.33 1356.23 482.781 C1356.29 482.232 1356.48 481.705 1356.79 481.249 C1357.1 480.792 1357.52 480.419 1358.01 480.164 c1358.5 479.909 1359.05 479.78 1359.6 479.788 C1360.53 479.788 1361.42 480.157 1362.08 480.814 C1362.74 481.471 1363.11 482.362 1363.12 483.292 CS0 D1376.52 482.808 m1386.96 453.526 L1389.09 447.566 1386.4399 440.745 1380.61 438.289 C1379.0601 437.633 1377.4 437.295 1375.72 437.294 CS1 D1356.16 448.516 m1343.95 414.286 L1341.48 407.367 1344.5601 399.452 1351.3199 396.593 C1353.12 395.831 1355.05 395.441 1357.01 395.446 CS1357.64 475.198 m1353.5699 463.887 L1351.78 459.002 1354.99 453.517 1360.16 453.051 C1360.41 453.051 1360.66 453.051 1360.91 453.051 c1363.1 453.051 1365.21 453.921 1366.76 455.471 c1368.3101 457.021 1369.1801 459.123 1369.1801 461.315 CS0 D1387.47 434.937 m1393 419.53 L1395.52 412.521 1390.97 404.642 1383.55 403.979 C1383.1899 403.943 1382.83 403.925 1382.47 403.925 CS1370.47 437.285 m1368.29 437.527 1366.29 438.623 1364.92 440.333 C1363.54 442.044 1362.91 444.229 1363.14 446.41 CS1377.2 403.145 m1374.83 402.777 1372.41 402.879 1370.08 403.446 C1367.75 404.012 1365.5601 405.032 1363.62 406.448 C1361.6899 407.863 1360.05 409.646 1358.8101 411.693 C1357.5601 413.741 1356.74 416.014 1356.37 418.382 CS1377.2 402.921 m1377.2 389.046 LS296.641 508.639 m296.641 507.483 296.414 506.339 295.971 505.271 c295.528 504.203 294.88 503.233 294.062 502.415 C293.244 501.598 292.273 500.95 291.205 500.508 C290.136 500.065 288.991 499.838 287.834 499.838 CS1 D288.489 482.79 m288.188 480.479 288.818 478.143 290.238 476.294 C291.659 474.446 293.755 473.237 296.067 472.931 CS0 D291.135 521.644 m290.522 521.644 289.925 521.839 289.431 522.2 C288.965 522.573 288.628 523.082 288.467 523.656 C288.306 524.23 288.33 524.84 288.534 525.4 C298.041 540.198 L310.435 517.674 L310.757 516.811 310.744 515.859 310.396 515.005 C310.049 514.152 309.394 513.46 308.561 513.067 C308.102 512.868 307.608 512.767 307.108 512.771 C306.617 512.77 306.131 512.865 305.677 513.052 C305.224 513.239 304.811 513.514 304.464 513.86 C304.116 514.206 303.841 514.618 303.653 515.071 C303.465 515.524 303.368 516.009 303.368 516.5 CS1 D291.215 517.521 m278.973 497.498 L277.85 495.72 277.445 493.583 277.84 491.518 C278.234 489.452 279.399 487.614 281.099 486.375 C282.044 485.713 283.115 485.252 284.247 485.022 CS0 D306.731 508.102 m313.691 497.92 L316.803 493.357 315.009 486.868 309.817 485.004 C309.565 484.914 309.305 484.834 309.045 484.762 C307.926 484.467 306.76 484.396 305.614 484.552 C304.467 484.708 303.363 485.088 302.363 485.67 C301.364 486.253 300.489 487.027 299.789 487.947 C299.089 488.868 298.577 489.918 298.283 491.036 CS1 D337.521 484.95 m339.841 485.67 341.838 487.173 343.172 489.202 C344.505 491.231 345.092 493.66 344.831 496.073 CS0 D335.835 537.052 m335.836 536.421 335.662 535.802 335.332 535.264 C335.002 534.725 334.529 534.289 333.966 534.003 C333.403 533.717 332.772 533.593 332.142 533.644 C331.513 533.694 330.91 533.919 330.4 534.292 C329.848 534.735 329.449 535.34 329.261 536.022 C329.073 536.704 329.104 537.428 329.35 538.092 C344.597 568.44 L359.315 541.686 L359.578 541.041 359.677 540.341 359.604 539.648 C359.532 538.956 359.289 538.292 358.897 537.715 C358.506 537.139 357.979 536.668 357.361 536.344 C356.744 536.021 356.057 535.854 355.36 535.86 C354.186 535.872 353.064 536.343 352.234 537.172 c351.403 538.002 350.932 539.124 350.92 540.297 CS1 D341.521 538.594 m322.382 507.304 L318.211 500.483 319.691 491.359 326.292 486.797 C328.037 485.582 330.012 484.734 332.095 484.305 CS0 D360.768 497.687 m372.992 477.367 L376.939 471.156 375.683 462.74 369.719 458.438 C369.674 458.438 L367.376 456.857 364.642 456.033 361.853 456.08 C352.642 456.08 LS1 D320.184 482.584 m315.7 475.458 317.09 465.805 323.942 460.876 C323.996 460.831 L326.634 459.027 329.769 458.087 332.965 458.142 C344.068 458.142 LS0 D354.606 530.724 m363.145 518.221 L366.849 512.843 364.723 505.09 358.544 502.876 C358.248 502.778 357.943 502.679 357.647 502.598 C356.318 502.253 354.935 502.173 353.575 502.362 c352.215 502.551 350.906 503.006 349.723 503.701 C348.539 504.396 347.504 505.318 346.677 506.413 C345.85 507.507 345.247 508.754 344.902 510.082 CS352.176 464.99 m352.176 443.308 LS1 D717.796 411.597 m717.796 477.125 L701.832 492.703 L688.71 505.493 LS709.993 485.452 m729.24 502.975 L731.357 514.743 LS717.796 440.118 m727.123 444.025 L750.478 453.813 LS0 D717.796 447.386 m689.257 454.817 L681.589 456.815 LS701.957 513.39 m700.63 493.868 LS705.966 488.661 m680.414 495.024 LS712.944 481.858 m695.437 471.819 L677.302 466.773 LS694.513 491.52 m677.302 480.155 LS729.24 502.975 m720.54 515.612 LS703.957 451.68 m698.531 462.749 LS690.657 478.479 m695.437 471.819 LS717.796 472.554 m757.258 486.384 LS717.796 456.833 m736.029 466.782 LS740.487 481.23 m744.182 492.461 LS722.227 496.593 m747.922 498.798 LS715.895 491.762 m709.993 514.645 LS717.796 461.306 m705.966 467.992 LS701.581 458.061 m705.473 462.525 LS710.791 449.206 m704.612 439.562 LS706.289 442.179 m697.428 443.873 LS735.079 440.754 m727.114 444.025 LS736.029 447.763 m740.487 455.067 LS731.868 477.484 m757.258 472.554 LS726.531 475.62 m727.177 488.661 LS737.527 499.013 m742.334 509.293 LS747.124 474.32 m751.187 464.649 LS727.177 461.306 m734.137 459.056 LS1 D1072.88 360.32 m1072.88 466.441 L1052.3101 486.5 L1035.41 502.983 LS1062.83 477.171 m1087.62 499.739 L1090.35 514.887 LS0 D1072.88 418.768 m1084.89 423.805 L1114.97 436.407 LS1072.88 428.125 m1036.11 437.706 L1026.24 440.279 LS1052.47 513.147 m1050.76 488.006 LS1057.64 481.302 m1024.72 489.494 LS1066.63 472.537 m1044.08 459.603 L1020.72 453.105 LS1042.89 484.977 m1020.72 470.341 LS1087.62 499.739 m1076.41 516.007 LS1055.05 433.655 m1048.05 447.924 LS1037.92 468.181 m1044.08 459.603 LS1072.88 460.553 m1123.7 478.362 LS1072.88 440.297 m1096.37 453.114 LS1102.1 471.73 m1106.87 486.196 LS1077.71 490.875 m1118.17 492.775 LS1070.4301 485.291 m1062.83 514.761 LS1072.88 446.06 m1057.64 454.673 LS1051.55 440.279 m1056.24 446.06 LS1063.86 430.482 m1055.05 416.742 LS1058.04 421.42 m1046.64 423.607 LS1097.11 418.767 m1084.89 423.805 LS1096.37 428.618 m1102.1 438.029 LS1090.99 466.899 m1123.7 460.553 LS1084.12 464.497 m1084.97 481.302 LS1110.65 462.821 m1115.88 450.362 LS1084.97 446.06 m1093.92 443.165 LS1122.8199 544.661 m1122.8199 544.105 1122.65 543.56 1122.34 543.098 C1122.03 542.635 1121.59 542.274 1121.08 542.061 C1120.5601 541.848 1120 541.792 1119.45 541.901 C1118.9 542.01 1118.4 542.278 1118.01 542.671 C1117.61 543.065 1117.35 543.566 1117.24 544.112 c1117.13 544.658 1117.1801 545.224 1117.4 545.738 C1117.61 546.252 1117.97 546.692 1118.4399 547.001 C1118.9 547.311 1119.4399 547.476 1120 547.476 CS1132.27 544.661 m1132.27 544.105 1132.1 543.56 1131.79 543.098 C1131.48 542.635 1131.04 542.274 1130.53 542.061 C1130.02 541.848 1129.45 541.792 1128.9 541.901 C1128.36 542.01 1127.86 542.278 1127.46 542.671 C1127.0699 543.065 1126.8 543.566 1126.6899 544.112 C1126.58 544.658 1126.64 545.224 1126.85 545.738 C1127.0601 546.252 1127.42 546.692 1127.89 547.001 C1128.35 547.311 1128.9 547.476 1129.45 547.476 CS1 D1122.23 538.862 m1124.55 536.496 L1126.64 538.8 LS0 D1113.02 538.002 m1113.02 543.433 L1112.99 546.441 1114.11 549.347 1116.16 551.553 C1118.21 553.759 1121.02 555.097 1124.03 555.291 C1125.59 555.367 1127.15 555.124 1128.62 554.578 C1130.08 554.032 1131.42 553.195 1132.5601 552.117 C1133.6899 551.038 1134.59 549.741 1135.21 548.304 C1135.8199 546.867 1136.14 545.32 1136.14 543.756 C1136.14 528.644 L1136.15 523.058 1134.67 517.571 1131.86 512.741 C1129.05 507.91 1125.01 503.91 1120.15 501.146 CS1 D1094.46 505.511 m1109.87 496.288 1124.55 518.902 VS1121.09 531.683 m1120.1801 532.481 1119.1 533.068 1117.9301 533.401 C1116.76 533.734 1115.53 533.806 1114.34 533.611 C1113.14 533.416 1111.99 532.959 1110.99 532.272 C1109.99 531.586 1109.15 530.687 1108.54 529.64 C1096.98 509.787 LS0 D1112.17 505.314 m1113.96 503.808 1114.26 498.224 VS1225.71 457.344 m1232.5 589.181 LS1303.2 450.443 m1296.73 589.181 LS1241.08 557.81 m1298.35 557.81 LS1229.01 519.547 m1266.33 519.547 LS1276.78 519.547 m1293.59 519.547 LS1267.64 481.293 m1232.5 481.293 LS1243.48 552.199 m1255.3 525.714 LS1253.08 552.199 m1264.91 525.714 LS1245.61 547.449 m1255.2 547.449 LS1253 530.885 m1262.59 530.885 LS1249.8199 538.414 m1258.99 538.414 LS1242.27 476.776 m1252.6 453.642 LS1251.87 476.776 m1259.36 460.006 LS1244.4 472.025 m1253.99 472.025 LS1248.62 462.991 m1257.79 462.991 LS1264.91 513.667 m1253.08 487.173 LS1255.3 513.667 m1243.48 487.173 LS1262.78 508.917 m1253.1899 508.917 LS1255.39 492.345 m1245.79 492.345 LS1258.5601 499.882 m1249.39 499.882 LS1261.39 583.659 m1252.1899 563.035 LS1252.1 584.332 m1242.58 563.036 LS1255.39 570.197 m1245.79 570.197 LS1258.5601 577.735 m1249.39 577.735 LS1231.1801 596.019 m1297.3199 596.019 LS1238.09 589.181 m1275.04 589.181 L1276.78 488.571 LS1281.6 589.181 m1289.83 589.181 LS1233.26 613.335 m1302.04 613.335 LS1 D1241.22 648.085 m1227.61 638.298 L1227.1801 637.995 1226.87 637.567 1226.71 637.074 C1226.54 636.581 1226.54 636.049 1226.7 635.555 C1226.86 635.061 1227.17 634.631 1227.6 634.326 C1228.02 634.022 1228.52 633.859 1229.04 633.861 C1302.66 633.861 L1302.9 633.861 1303.15 633.941 1303.34 634.09 C1303.54 634.239 1303.6899 634.449 1303.75 634.687 C1303.8199 634.925 1303.8101 635.179 1303.72 635.41 C1303.63 635.641 1303.47 635.837 1303.26 635.967 C1279.17 650.917 L1275.22 653.373 1270.66 654.674 1266 654.673 C1250.8199 654.673 LS0 D1227.0699 601.46 m1227.0699 627.372 LS1302.04 601.46 m1302.04 626.816 LS1270.96 619.117 m1270.96 626.816 LS1270.96 603.225 m1270.96 613.335 LS1 D1177.11 332.186 m1097.75 343.837 1021.31 349.887 989.988 349.359 CS641.266 536.335 m641.265 535.72 641.434 535.117 641.755 534.593 C642.077 534.069 642.537 533.644 643.085 533.366 C643.633 533.087 644.248 532.966 644.861 533.015 C645.474 533.065 646.061 533.283 646.557 533.646 C647.096 534.076 647.485 534.666 647.669 535.331 c647.853 535.996 647.821 536.701 647.58 537.347 C636.575 569.973 L622.225 528.402 L621.854 527.402 621.871 526.299 622.275 525.312 C622.679 524.324 623.439 523.524 624.404 523.069 C624.937 522.841 625.511 522.725 626.091 522.729 C627.237 522.729 628.337 523.184 629.147 523.994 C629.958 524.804 630.413 525.903 630.413 527.049 CS0 D646.467 527.533 m659.714 490.382 L662.333 483.041 659.069 474.643 651.885 471.56 C649.979 470.75 647.928 470.336 645.858 470.341 CS1 D620.108 486.384 m606.574 448.426 L603.956 441.086 607.22 432.678 614.404 429.604 C616.315 428.799 618.367 428.385 620.44 428.385 CS623.49 516.822 m618.584 503.145 L616.422 497.14 620.324 490.382 626.656 489.808 C626.961 489.808 627.265 489.763 627.552 489.763 c628.89 489.763 630.215 490.027 631.451 490.538 C632.688 491.05 633.811 491.8 634.757 492.745 C635.703 493.691 636.453 494.813 636.965 496.049 C637.477 497.284 637.741 498.608 637.741 499.945 CS0 D657.526 468.942 m665.06 447.987 L668.118 439.472 662.593 429.9 653.58 429.093 C653.145 429.05 652.708 429.029 652.27 429.03 CS640.369 470.386 m637.681 470.679 635.22 472.026 633.526 474.132 C631.833 476.238 631.045 478.93 631.337 481.616 CS647.311 421.259 m644.437 420.812 641.504 420.934 638.678 421.62 C635.852 422.306 633.189 423.541 630.841 425.256 C628.493 426.971 626.506 429.131 624.994 431.613 C623.482 434.096 622.474 436.851 622.028 439.723 CS635.131 418.113 m635.131 401.397 LS390.141 504.221 m390.141 502.027 389.268 499.922 387.716 498.371 C386.164 496.819 384.058 495.948 381.862 495.948 CS1 D382.445 479.931 m382.16 477.756 382.751 475.557 384.089 473.817 C385.426 472.078 387.399 470.94 389.576 470.654 CS0 D387.638 519.144 m387.638 518.43 387.355 517.747 386.85 517.242 c386.346 516.738 385.661 516.455 384.948 516.455 C384.374 516.456 383.816 516.638 383.351 516.975 C382.917 517.328 382.604 517.809 382.457 518.348 C382.309 518.888 382.333 519.461 382.526 519.986 C391.495 533.888 L403.154 512.726 L403.456 511.91 403.439 511.011 403.106 510.207 C402.774 509.403 402.151 508.753 401.361 508.388 C400.928 508.211 400.465 508.119 399.997 508.119 C399.532 508.11 399.07 508.193 398.637 508.363 C398.205 508.534 397.811 508.789 397.478 509.114 C397.144 509.438 396.879 509.826 396.698 510.253 C396.516 510.681 396.421 511.141 396.419 511.606 CS1 D384.598 511.893 m373.504 493.752 L372.45 492.079 372.071 490.069 372.442 488.128 C372.813 486.187 373.907 484.458 375.504 483.292 C376.395 482.673 377.401 482.24 378.463 482.019 CS0 D399.943 503.342 m406.132 494.146 L409.056 489.862 407.37 483.758 402.482 482.001 C402.248 481.921 402.015 481.849 401.764 481.786 C400.713 481.511 399.619 481.446 398.543 481.595 C397.467 481.743 396.431 482.103 395.495 482.652 C394.558 483.202 393.739 483.931 393.085 484.797 C392.431 485.664 391.955 486.651 391.683 487.702 CS895.601 358.205 m924.589 332.849 L924.589 306.641 LS1 D958.885 359.926 m940.051 359.926 L917.387 339.15 LS0 D924.642 321.977 m944.777 341.292 LS930.768 351.411 m928.804 368.96 LS911.494 344.303 m897.341 340.915 LS924.642 347.458 m906.956 371.757 LS915.799 359.612 m904.418 359.612 LS947.539 360.186 m950.033 371.757 LS933.907 332.418 m930.768 342.609 LS940.84 337.519 m950.033 335.932 LS693.984 278.345 m700.11 285.749 L715.321 304.123 LS689.661 294.209 m666.692 300.896 LS694.19 301.873 m673.948 326.1 LS711.141 299.085 m722.307 298.449 LS694.047 334.202 m705.392 319.189 L689.661 294.209 L693.984 278.345 L693.589 260.114 LS682.1 316.339 m682.441 326.324 LS686.746 310.782 m673.365 312.754 LS674.064 299.041 m671.356 306.202 LS679.67 297.122 m671.374 292.103 LS700.307 311.122 m708.782 312.655 L718.953 314.483 LS700.684 325.41 m702.128 333.019 LS702.307 322.362 m693.849 322.658 LS714.271 320.041 m711.025 313.578 LS700.397 302.401 m700.11 285.748 LS700.101 295.41 m705.85 300.743 LS705.742 292.56 m715.984 287.908 LS448.581 466.155 m407.181 466.155 L406.722 466.153 406.271 466.28 405.879 466.521 C405.488 466.761 405.172 467.106 404.966 467.517 C404.966 467.517 L404.722 468.006 404.646 468.562 404.749 469.098 C404.853 469.634 405.131 470.121 405.54 470.484 C415.926 483.337 423.083 483.337 V452.186 483.337 LS408.266 466.155 m408.266 446.033 LS419.433 449.734 m419.433 458.034 L426.778 458.034 L426.778 449.734 LS438.231 454.153 m438.231 458.034 L445.056 458.034 L445.056 447.646 LS1 D501.102 466.155 m528.304 466.155 L528.764 466.154 529.214 466.281 529.605 466.522 C529.997 466.762 530.313 467.107 530.52 467.517 C530.52 467.517 L530.763 468.007 530.837 468.563 530.732 469.1 C530.627 469.636 530.347 470.123 529.937 470.484 C518.591 483.337 511.102 483.337 V495.757 483.337 LS0 D527.246 466.155 m527.246 450.721 LS1 D516.071 449.734 m516.071 458.034 L508.734 458.034 L508.734 455.722 LS440.769 487.128 m439.379 487.128 L436.832 487.128 L435.558 487.128 L435.558 484.063 LS443.056 489.871 m443.056 491.17 L443.057 491.419 443.009 491.665 442.915 491.895 C442.82 492.125 442.681 492.334 442.505 492.51 c442.329 492.686 442.12 492.825 441.889 492.92 C441.659 493.015 441.413 493.063 441.164 493.062 C435.245 493.062 L434.72 493.062 434.218 492.854 433.846 492.485 C433.475 492.115 433.265 491.613 433.262 491.09 C433.262 490.041 LS0 D860.247 402.374 m860.247 415.908 L872.22 415.908 L872.22 412.135 LS872.22 407.116 m872.22 402.374 L864.345 402.374 LS866.238 415.908 m866.238 407.115 LS954.849 405.592 m954.849 414.698 L966.822 414.698 L966.822 408.084 LS966.822 403.181 m966.822 401.165 L954.849 401.165 LS960.84 414.698 m960.84 405.906 LS997.19 417.423 m997.19 389.853 LS844.704 417.835 m844.704 398.35 LS866.238 466.89 m989.935 466.89 L992.474 466.89 994.952 466.106 997.029 464.647 C999.106 463.187 1000.68 461.122 1001.54 458.733 C1009.45 436.756 L1011.47 431.289 1007.93 425.104 1002.11 424.576 C1001.84 424.576 1001.56 424.531 1001.27 424.531 C994.563 424.531 LS1 D858.309 466.89 m850.238 466.89 L847.977 466.89 845.771 466.193 843.922 464.893 C842.073 463.594 840.67 461.756 839.905 459.63 C831.672 436.756 L830.979 434.874 830.916 432.818 831.494 430.898 C832.071 428.977 833.257 427.296 834.874 426.108 CS0 D925.154 425.427 m919.303 420.619 911.782 418.328 904.242 419.059 C896.703 419.79 889.763 423.483 884.947 429.326 CS992.078 430.903 m992.353 429.928 992.432 428.907 992.312 427.901 C992.192 426.894 991.875 425.922 991.378 425.038 C990.882 424.154 990.216 423.376 989.419 422.749 C988.622 422.123 987.709 421.659 986.733 421.385 C985.756 421.11 984.736 421.031 983.729 421.151 C982.721 421.271 981.748 421.588 980.863 422.084 C979.979 422.58 979.201 423.246 978.574 424.042 C977.946 424.839 977.482 425.751 977.208 426.727 CS979.737 432.669 m962.16 426.451 943.099 425.759 925.118 430.688 CS954.697 439.095 m933.94 433.792 912.057 434.965 891.987 442.457 CS883.072 425.158 m868.919 421.98 854.261 421.766 840.022 424.531 CS1 D920.786 471.058 m920.786 475.234 L918.095 475.234 L913.153 475.234 L910.687 475.234 L910.687 466.89 L920.786 466.89 LS925.342 473.245 m925.877 473.245 926.39 473.457 926.769 473.835 C927.147 474.214 927.36 474.726 927.36 475.261 C927.36 478.273 L927.36 479.461 926.887 480.601 926.046 481.442 C925.205 482.282 924.065 482.754 922.875 482.754 C908.821 482.754 L907.576 482.752 906.382 482.256 905.501 481.376 C904.62 480.496 904.124 479.303 904.122 478.058 C904.122 475.566 L904.124 474.945 904.373 474.35 904.813 473.911 C905.254 473.473 905.85 473.227 906.472 473.227 CS0 D884.947 397.929 m884.947 414.116 L902.05 414.116 L902.05 396.378 LS889.494 401.272 m889.494 405.888 LS137.868 125.786 m269.161 206.041 501.873 174.087 VS1 D236.999 483.059 m236.997 480.428 237.725 477.848 239.101 475.605 C240.478 473.362 242.45 471.544 244.798 470.354 C247.146 469.163 249.778 468.647 252.402 468.861 C255.027 469.076 257.54 470.013 259.663 471.569 C264.497 475.154 265.941 481.742 264.022 487.415 C216.954 626.959 L155.581 449.161 L152.523 440.297 156.245 429.981 164.882 426.333 C167.695 425.148 170.758 424.676 173.798 424.96 c176.838 425.244 179.76 426.275 182.305 427.96 C184.851 429.646 186.939 431.934 188.385 434.621 C189.832 437.308 190.591 440.311 190.595 443.362 CS0 D253.421 461.503 m316.032 286.519 L327.225 255.149 313.261 219.198 282.56 206.193 C274.395 202.737 265.616 200.963 256.748 200.976 CS1 D167.967 417.423 m140.101 341.104 L130.863 315.389 147.545 286.492 174.774 284.037 C176.083 283.911 177.402 283.857 178.738 283.857 c190.292 283.857 201.373 288.443 209.544 296.607 C217.715 304.771 222.306 315.844 222.308 327.39 CS143.769 286.618 m140.282 280.242 138.203 273.195 137.67 265.949 C137.536 262.194 L137.536 255.503 138.854 248.879 141.416 242.698 C143.978 236.517 147.733 230.9 152.467 226.17 C157.201 221.439 162.821 217.686 169.006 215.126 c175.191 212.566 181.82 211.248 188.514 211.248 CS190.245 371.219 m195.937 371.838 201.451 373.572 206.472 376.322 C211.493 379.071 215.923 382.781 219.509 387.242 C223.096 391.702 225.768 396.824 227.373 402.317 C228.978 407.809 229.485 413.563 228.865 419.251 CS0 D254.39 236.721 m254.39 177.861 LS224.47 160.276 m224.47 206.238 LS227.205 223.931 m223.89 219.562 219.486 216.138 214.434 214 C210.126 212.18 205.496 211.244 200.819 211.248 CS551.695 478.434 m550.614 478.556 549.568 478.889 548.617 479.415 C547.666 479.94 546.827 480.649 546.15 481.499 c545.473 482.349 544.97 483.324 544.67 484.368 C544.37 485.413 544.28 486.506 544.403 487.585 CS1 D544.296 530.912 m544.296 530.199 544.579 529.515 545.084 529.011 C545.588 528.507 546.273 528.223 546.986 528.223 C547.56 528.225 548.118 528.407 548.583 528.743 C549.017 529.097 549.329 529.577 549.477 530.117 c549.625 530.657 549.601 531.229 549.408 531.755 C540.439 545.656 L528.78 524.495 L528.48 523.679 528.498 522.78 528.831 521.976 C529.163 521.173 529.785 520.524 530.573 520.157 C531.009 519.98 531.475 519.889 531.946 519.888 C532.876 519.888 533.768 520.257 534.425 520.914 C535.083 521.571 535.452 522.463 535.452 523.392 CS0 D547.587 523.966 m564.305 496.62 L567.605 491.242 566.412 484.009 561.211 480.406 C559.83 479.443 558.268 478.772 556.619 478.434 CS561.811 475.844 m565.399 470.206 564.26 462.57 558.843 458.671 C558.798 458.671 L556.711 457.243 554.232 456.497 551.704 456.537 C542.914 456.537 LS1 D533.955 515.622 m525.811 503.719 L522.878 499.434 524.564 493.331 529.452 491.583 C529.685 491.502 529.928 491.422 530.17 491.359 C531.221 491.086 532.316 491.023 533.391 491.174 C534.467 491.324 535.502 491.684 536.438 492.235 C537.374 492.785 538.193 493.514 538.847 494.38 c539.501 495.246 539.978 496.233 540.251 497.283 CS542.941 514.779 m542.656 512.606 543.246 510.409 544.582 508.671 C545.917 506.933 547.888 505.797 550.062 505.511 CS0 D542.869 463 m542.869 446.571 LS529.228 487.128 m526.304 479.931 LS1199.4399 197.454 m1203.64 169.902 LS1 D1217.29 166.873 m1217.02 195.5 L1223.25 210.029 L1208.9 216.366 L1208.5699 203.002 1193.9301 201.604 VS0 D1239.84 167.859 m1231.86 184.906 L1229.72 203.782 LS1184.39 202.913 m1189.77 212.109 1189.4301 218.93 V1189.23 223.411 1183.28 227.247 1179.28 229.309 C1178.9399 229.487 1178.66 229.752 1178.45 230.077 C1178.25 230.402 1178.13 230.775 1178.12 231.159 c1178.11 231.543 1178.2 231.923 1178.38 232.261 c1178.5601 232.599 1178.83 232.882 1179.16 233.082 C1190.75 240.252 L1221.55 256.888 1252.64 212.342 Y1252.84 212.116 1253.09 211.948 1253.38 211.856 C1253.67 211.763 1253.97 211.749 1254.26 211.815 C1254.5601 211.881 1254.83 212.025 1255.05 212.231 C1255.27 212.437 1255.4301 212.698 1255.51 212.987 C1257.45 219.745 L1257.53 220.041 1257.6899 220.311 1257.91 220.53 C1258.13 220.749 1258.4 220.91 1258.6899 220.999 C1258.99 221.088 1259.3 221.102 1259.6 221.04 C1259.91 220.977 1260.1899 220.84 1260.42 220.641 C1260.42 220.641 L1260.64 220.464 1260.8101 220.24 1260.9301 219.987 C1261.04 219.734 1261.1 219.459 1261.1 219.181 C1261.1 219.181 L1261.03 213.078 1261.61 206.986 1262.8199 201.004 C1264.95 190.454 L1261 187.47 L1254.3199 192.552 L1251.39 194.791 1249.24 197.904 1248.1801 201.443 C1247.11 205.028 1242.21 210.002 Y1229.45 210.002 LS1186.23 198.512 m1192.91 172.967 LS1 D1130.6801 198.602 m1142.86 197.248 1144.4 214.511 1136.4399 217.101 C1138.72 222.837 1137.4 232.033 1131.41 233.638 C1132.14 240.208 1130.6801 244.008 1125.88 246.114 C1126.11 252.039 1125.27 256.825 1123.24 256.87 C1121.2 256.915 1120.21 252.917 1120.26 250.031 C1116.97 248.122 1114.54 242.457 1115.5601 238.003 C1108.26 235.475 1107.16 224.415 1110.96 218.723 C1102.78 214.054 1103.25 199.587 1114.55 198.736 CS1122.79 227.803 m1122.79 203.531 L1128.77 212.915 LS0 D1519.73 167.043 m1500.21 164.883 1497.75 192.524 1510.5 196.62 C1506.91 205.807 1508.97 220.534 1518.5699 223.106 C1517.4 233.629 1519.74 239.705 1527.42 243.084 C1527.0601 252.576 1528.39 260.231 1531.65 260.347 C1534.9 260.464 1536.52 254.019 1536.42 249.403 C1541.7 246.347 1545.58 237.259 1543.95 230.142 C1555.61 226.091 1557.41 208.38 1551.3199 199.256 C1564.42 191.78 1563.65 168.62 1545.6 167.258 CS1532.36 213.812 m1532.36 174.939 L1522.79 189.961 LS1067.84 210.63 m1059.33 212.288 1053.9301 222.03 1054.76 230.124 C1055.6 238.218 1063.0601 246.714 1067.84 248.785 C1072.62 250.855 1067.62 279.259 1073.86 282.387 C1080.09 285.515 1084.23 272.474 1082.53 266.254 C1088.34 261.898 1090 255.677 1088.34 251.734 C1093.53 249.663 1095.4 244.68 1093.95 241.776 C1097.89 236.398 1100.38 224.746 1094.99 221.045 C1095.88 214.77 1090.11 209.393 1084.5 209.635 CS1077.0699 233.897 m1077.0699 207.77 L1071.25 221.251 LS1 D1594.97 251.859 m1594.96 251.289 1595.12 250.73 1595.42 250.243 C1595.72 249.757 1596.14 249.363 1596.65 249.105 C1597.16 248.848 1597.73 248.737 1598.3 248.785 C1598.87 248.833 1599.41 249.038 1599.87 249.377 C1600.37 249.777 1600.72 250.323 1600.89 250.937 C1601.0601 251.552 1601.03 252.203 1600.8101 252.801 C1590.63 282.961 L1577.37 244.528 L1577.13 243.945 1577.04 243.312 1577.11 242.686 C1577.17 242.059 1577.39 241.459 1577.75 240.939 C1578.1 240.419 1578.58 239.996 1579.14 239.707 c1579.7 239.418 1580.33 239.273 1580.96 239.284 C1582.02 239.284 1583.04 239.706 1583.79 240.455 C1584.54 241.205 1584.96 242.222 1584.96 243.282 CS0 D1600.03 243.058 m1612.03 209.375 L1614.45 202.59 1611.4301 194.819 1604.79 192.014 C1603.03 191.267 1601.13 190.883 1599.22 190.884 C1595.28 191.144 L1595.28 176.015 LS1 D1579.1 232.204 m1569.6801 205.799 L1567.73 200.313 1570.17 194.039 1575.53 191.772 C1576.95 191.178 1578.48 190.873 1580.02 190.875 CS0 D1561.39 257.775 m1572.02 288.491 L1579.9301 265.851 LS1572.92 253.715 m1571.89 253.715 1570.89 254.125 1570.16 254.856 C1569.4301 255.587 1569.01 256.579 1569.01 257.614 CS1 D1510.28 257.748 m1512.0699 257.942 1513.8 258.486 1515.38 259.35 C1516.96 260.213 1518.35 261.378 1519.47 262.779 C1520.6 264.18 1521.4399 265.789 1521.9399 267.514 C1522.45 269.239 1522.6 271.046 1522.41 272.833 CS0 D1509.02 329.102 m1509.05 328.45 1508.9301 327.799 1508.6801 327.197 C1508.4301 326.595 1508.04 326.058 1507.55 325.623 C1507.0699 325.188 1506.49 324.868 1505.86 324.685 c1505.23 324.502 1504.5699 324.461 1503.9301 324.565 C1503.28 324.669 1502.67 324.916 1502.13 325.287 C1501.59 325.658 1501.15 326.144 1500.8199 326.71 C1500.49 327.276 1500.3 327.908 1500.25 328.559 c1500.2 329.21 1500.29 329.864 1500.53 330.473 C1520.47 370.17 L1539.76 335.215 L1540.1 334.37 1540.23 333.453 1540.13 332.546 C1540.04 331.638 1539.72 330.769 1539.21 330.014 C1538.6899 329.259 1538 328.643 1537.1899 328.22 C1536.38 327.796 1535.48 327.579 1534.5699 327.587 C1533.8101 327.587 1533.05 327.738 1532.35 328.029 C1531.64 328.321 1531 328.749 1530.46 329.288 C1529.92 329.828 1529.49 330.468 1529.2 331.173 C1528.91 331.877 1528.76 332.633 1528.76 333.395 CS1 D1516.46 328.502 m1491.4 287.523 L1485.9399 278.56 1487.92 266.649 1496.53 260.679 C1498.8101 259.094 1501.4 257.985 1504.12 257.417 CS0 D1541.67 277.574 m1557.67 250.963 L1559.6 247.938 1560.62 244.424 1560.62 240.835 c1560.62 237.246 1559.6 233.732 1557.67 230.707 CS1 D1488.49 257.793 m1482.5601 248.471 1484.4399 235.834 1493.4 229.371 C1493.48 229.371 LS0 D1531.3 322.954 m1544.75 303.235 L1549.59 296.145 1546.8 286.044 1538.72 283.149 C1538.33 283.007 1537.9301 282.884 1537.53 282.782 C1535.79 282.33 1533.98 282.225 1532.2 282.472 C1530.42 282.72 1528.71 283.316 1527.16 284.226 C1525.61 285.135 1524.25 286.341 1523.17 287.775 C1522.09 289.208 1521.3 290.84 1520.85 292.578 CS1 D1337.8 155.678 m1338.34 207.914 L1338.34 217.278 1334.62 226.258 1328 232.879 C1321.37 239.5 1312.39 243.219 1303.02 243.219 C1294.1899 243.219 L1291.8101 243.219 1289.53 244.163 1287.85 245.844 C1286.17 247.525 1285.22 249.805 1285.22 252.182 C1285.22 252.182 LS0 D1276.4301 243.147 m1276.2 237.77 L1275.78 229.065 1277.6801 220.405 1281.71 212.673 C1287.37 201.918 1294.87 182.298 1294.87 154.172 CS1310.26 208.766 m1313.4399 189.11 1331.55 183.051 V1332.83 161.755 LS1284.1899 278.184 m1291.58 278.184 L1294.15 278.184 1295.17 275.333 1293.03 274.105 C1286.67 270.431 L1281.1899 251.187 L1280.88 250.101 1280.23 249.145 1279.3199 248.464 C1278.42 247.783 1277.3199 247.415 1276.1899 247.414 C1276.1899 247.414 L1275.0601 247.414 1273.96 247.782 1273.0601 248.463 C1272.16 249.144 1271.5 250.101 1271.1899 251.187 C1265.71 270.431 L1259.35 274.105 L1257.22 275.333 1258.23 278.184 1260.8 278.184 C1268.1801 278.184 LS1272.5601 275.782 m1275.0601 288.411 1259.92 288.411 V1250.17 288.411 L1246.34 288.411 1242.67 289.931 1239.96 292.637 C1237.25 295.343 1235.73 299.014 1235.73 302.841 C1235.73 309.482 LS1 D1253.23 296.862 m1253.23 295.747 1253.45 294.642 1253.87 293.611 C1254.3 292.58 1254.9301 291.644 1255.71 290.855 C1256.5 290.065 1257.4399 289.439 1258.47 289.012 c1259.5 288.585 1260.61 288.365 1261.72 288.365 CS1280.3101 275.782 m1277.8101 288.411 1292.95 288.411 V1302.7 288.411 L1304.6 288.411 1306.47 288.784 1308.23 289.509 C1309.98 290.234 1311.5699 291.298 1312.91 292.638 C1314.25 293.978 1315.3101 295.569 1316.04 297.319 C1316.76 299.07 1317.13 300.946 1317.13 302.841 C1317.13 309.482 LS0 D1299.64 296.862 m1299.64 295.746 1299.4301 294.641 1299 293.609 C1298.5699 292.578 1297.95 291.641 1297.16 290.851 C1296.37 290.062 1295.4301 289.436 1294.4 289.01 C1293.36 288.583 1292.26 288.364 1291.14 288.365 C1291.14 288.365 LS1 D1293.0699 195.742 m1297.48 198.703 1301.09 202.705 1303.58 207.394 CS1299.64 211.634 m1303.4399 211.571 1307.22 212.178 1310.8101 213.426 CS0 D1341.84 213.597 m1343.75 205.288 L1343.91 204.554 1343.83 203.787 1343.5 203.11 C1343.1801 202.432 1342.63 201.883 1341.96 201.55 CS1 D1457.34 310.378 m1457.34 309.472 1457.71 308.603 1458.35 307.963 c1458.99 307.323 1459.86 306.963 1460.77 306.963 C1461.3101 306.955 1461.84 307.08 1462.3199 307.327 C1462.79 307.574 1463.2 307.936 1463.51 308.38 C1463.8101 308.824 1464 309.336 1464.0601 309.871 C1464.11 310.406 1464.04 310.947 1463.83 311.445 C1452.53 344.958 L1437.79 302.258 L1437.53 301.612 1437.4301 300.912 1437.51 300.219 C1437.58 299.527 1437.8199 298.863 1438.22 298.287 C1438.61 297.712 1439.13 297.241 1439.75 296.917 C1440.37 296.594 1441.0601 296.427 1441.75 296.432 C1442.9399 296.432 1444.0699 296.898 1444.91 297.729 C1445.75 298.56 1446.23 299.688 1446.24 300.869 CS0 D1461.8 303.943 m1476.33 263.189 L1479.02 255.642 1475.66 247.055 1468.26 243.9 C1466.3 243.07 1464.1899 242.643 1462.0601 242.646 CS1 D1443.3 255.301 m1427.3 210.415 L1423.5699 199.955 1428.1899 188.007 1438.45 183.651 C1441.17 182.5 1444.1 181.909 1447.05 181.912 CS0 D1416.73 330.482 m1429.24 303.217 L1429.48 302.6 1429.59 301.942 1429.5699 301.281 C1429.5601 300.62 1429.41 299.97 1429.13 299.368 C1428.86 298.765 1428.47 298.223 1427.98 297.773 C1427.5 297.323 1426.9301 296.974 1426.3101 296.746 C1425.58 296.47 1424.8199 296.33 1424.04 296.334 C1420.8199 296.334 1418.21 298.682 1418.21 301.577 CS1 D1400.27 338.182 m1388.52 312.189 L1388.29 311.574 1388.1801 310.918 1388.1899 310.259 C1388.21 309.6 1388.36 308.952 1388.64 308.351 C1388.91 307.751 1389.3 307.21 1389.78 306.761 C1390.26 306.312 1390.83 305.964 1391.45 305.736 C1392.17 305.459 1392.9399 305.32 1393.72 305.323 C1396.9301 305.323 1399.53 307.663 1399.53 310.549 CS1440.26 293.492 m1434.1 276.292 L1431.89 270.117 1435.9 263.179 1442.4301 262.588 C1442.74 262.588 1443.0601 262.543 1443.39 262.543 C1446.16 262.548 1448.8199 263.652 1450.77 265.613 C1452.73 267.574 1453.83 270.232 1453.83 273.003 CS1357.29 249.305 m1350.51 230.482 L1348.08 223.706 1352.48 216.097 1359.65 215.452 C1360 215.419 1360.35 215.404 1360.6899 215.407 C1363.74 215.407 1366.66 216.614 1368.8101 218.764 C1370.96 220.913 1372.17 223.829 1372.17 226.87 CS0 D1472.67 240.979 m1483.28 211.454 L1487.09 200.86 1480.21 188.939 1468.98 187.927 C1468.4399 187.927 1467.9 187.855 1467.35 187.855 CS1 D1398.3 298.655 m1388.89 272.25 L1386.78 266.317 1389.41 259.523 1395.21 257.067 C1396.76 256.414 1398.42 256.079 1400.09 256.081 CS0 D1423.61 281.079 m1431.99 257.775 L1435 249.394 1429.5601 239.983 1420.6899 239.186 C1420.27 239.142 1419.83 239.121 1419.4 239.123 C1417.54 239.123 1415.7 239.49 1413.97 240.202 C1412.25 240.915 1410.6899 241.959 1409.37 243.276 c1408.05 244.593 1407.01 246.156 1406.29 247.876 C1405.58 249.596 1405.21 251.44 1405.21 253.302 CS1 D1389.53 252.585 m1373.63 208.246 L1368.39 193.672 1377.84 177.288 1393.28 175.898 C1394.01 175.836 1394.77 175.8 1395.52 175.8 CS1422.95 166.254 m1424.45 166.417 1425.89 166.872 1427.21 167.594 C1428.53 168.315 1429.6899 169.289 1430.63 170.459 C1431.5699 171.629 1432.27 172.973 1432.6899 174.414 C1433.11 175.855 1433.24 177.364 1433.08 178.856 CS0 D1472.84 182.244 m1469.26 181.687 1465.61 181.84 1462.09 182.695 C1458.5601 183.55 1455.25 185.089 1452.3199 187.226 C1449.4 189.363 1446.92 192.055 1445.04 195.148 c1443.16 198.241 1441.9 201.674 1441.35 205.252 CS1 D1385.51 282.764 m1378.6899 303.011 L1363.08 257.82 L1362.8 257.136 1362.7 256.395 1362.78 255.661 C1362.85 254.927 1363.11 254.224 1363.53 253.614 C1363.9399 253.004 1364.5 252.506 1365.16 252.164 C1365.8101 251.822 1366.54 251.646 1367.28 251.653 C1367.89 251.652 1368.51 251.773 1369.08 252.008 C1369.65 252.244 1370.17 252.59 1370.6 253.026 C1371.04 253.463 1371.39 253.981 1371.62 254.551 C1371.86 255.122 1371.98 255.733 1371.98 256.35 CS0 D1403.04 346.078 m1403.0601 345.674 1403 345.269 1402.85 344.893 C1402.7 344.518 1402.46 344.181 1402.16 343.908 C1401.87 343.635 1401.51 343.433 1401.12 343.317 C1400.73 343.202 1400.3199 343.175 1399.92 343.239 C1399.52 343.304 1399.14 343.458 1398.8101 343.689 C1398.48 343.921 1398.2 344.225 1398 344.578 C1397.8101 344.931 1397.6899 345.324 1397.67 345.728 C1397.64 346.132 1397.71 346.537 1397.86 346.911 C1406.87 360.938 L1418.61 339.589 L1418.92 338.769 1418.9 337.865 1418.5699 337.057 C1418.24 336.248 1417.61 335.594 1416.8199 335.224 C1416.38 335.041 1415.91 334.946 1415.4399 334.946 c1414.5 334.946 1413.59 335.317 1412.92 335.98 C1412.25 336.643 1411.86 337.543 1411.85 338.486 CS1457.66 178.3 m1457.66 157.488 LS1416.9301 174.088 m1416.9301 150.273 LS1381.39 145.98 m1381.39 170.941 LS1297.52 192.892 m1301.02 174.572 1299.64 155.678 VS1 D1282.7 199.238 m1273.64 188.393 L1279.05 165.412 L1283.08 163.628 LS0 D1631.1899 515.747 m1631.1899 511.472 LS1633.33 513.604 m1629.0601 513.604 LS1519.04 422.156 m1563.97 440.279 1617.3199 436.066 1658.85 411.122 CS1 D1522.78 563.035 m1522.77 562.663 1522.84 562.294 1522.98 561.948 C1523.12 561.603 1523.3199 561.288 1523.58 561.023 C1523.84 560.757 1524.16 560.547 1524.5 560.403 C1524.84 560.259 1525.21 560.185 1525.58 560.185 c1526.02 560.185 1526.45 560.291 1526.84 560.495 C1527.23 560.698 1527.5601 560.993 1527.8 561.353 C1528.05 561.713 1528.21 562.128 1528.26 562.561 C1528.3101 562.995 1528.25 563.435 1528.1 563.842 C1518.83 591.305 L1506.76 556.349 L1506.45 555.513 1506.46 554.59 1506.79 553.762 C1507.12 552.933 1507.75 552.257 1508.55 551.868 C1509 551.68 1509.48 551.582 1509.97 551.581 C1510.9399 551.581 1511.86 551.964 1512.54 552.647 C1513.23 553.329 1513.61 554.255 1513.61 555.22 CS0 D1527.25 555.435 m1538.33 524.334 L1540.54 518.158 1537.79 511.086 1531.75 508.532 C1530.77 508.105 1529.75 507.804 1528.71 507.636 CS1 D1506.63 519.852 m1493.73 483.642 L1491.17 476.471 1494.36 468.261 1501.38 465.294 C1503.24 464.503 1505.25 464.097 1507.27 464.102 CS1507.89 546.741 m1503.71 535.089 L1501.92 530.025 1505.17 524.333 1510.53 523.858 C1510.79 523.845 1511.0601 523.845 1511.3199 523.858 C1513.59 523.858 1515.77 524.761 1517.38 526.368 C1518.99 527.975 1519.89 530.154 1519.89 532.427 CS0 D1537.4301 504.839 m1543.34 488.383 L1545.96 481.114 1541.24 472.949 1533.55 472.25 CS1523.71 507.519 m1521.45 507.767 1519.38 508.902 1517.95 510.675 C1516.53 512.448 1515.87 514.714 1516.11 516.975 CS1528.1899 472.115 m1523.24 471.345 1518.1801 472.572 1514.14 475.527 C1510.09 478.482 1507.38 482.922 1506.61 487.872 CS1528.1899 471.891 m1528.1899 457.497 LSULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF